name: test download

on: workflow_dispatch

jobs:
  detect_arch:
    runs-on: ubuntu-latest
    outputs:
      arch: ${{ steps.detect.outputs.arch }}
      tag_name: ${{ steps.detect.outputs.tag_name }}
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.5.0

      - name: Detect Target Architecture and Tag Name
        id: detect
        run: |
          TAG_NAME=$(curl -sL https://api.github.com/repos/aywl1207/openwrt-cloudflared/releases/latest | jq -r '.tag_name')
          echo "Detected tag name: $TAG_NAME"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "::set-output name=tag_name::$TAG_NAME"
          ARCH=$(grep '^CONFIG_TARGET_ARCH_PACKAGES=' .full_custom_config | cut -d '"' -f 2)
          echo "Detected architecture: $ARCH"
          echo "ARCH=$ARCH" >> $GITHUB_ENV
          echo "::set-output name=arch::$ARCH"

  build:
    needs: detect_arch
    name: Prepare and build IPQ807x NSS images for devices
    runs-on: self-hosted
    env:
      ARCH: ${{ needs.detect_arch.outputs.arch }}
      TAG_NAME: ${{ needs.detect_arch.outputs.tag_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Echo env
        run: echo "TAG_NAME=${TAG_NAME}, ARCH=${ARCH}"
          
      - name: Remove Default Cloudflared Package Before Build
        run: mkdir -p package/network/utils/cloudflared

      - name: Debug Filename & URL
        run: |
          echo "URL: https://github.com/aywl1207/openwrt-cloudflared/releases/download/${TAG_NAME}/cloudflared-${TAG_NAME}-${ARCH}.apk"

      - name: Fetch Custom Cloudflared APK
        run: wget -O package/network/utils/cloudflared/cloudflared-${TAG_NAME}-${ARCH}.apk https://github.com/aywl1207/openwrt-cloudflared/releases/download/${TAG_NAME}/cloudflared-${TAG_NAME}-${ARCH}.apk
        
      - name: Get the current date
        run: echo "NOW=$(date +%F-%H%M)" >> $GITHUB_ENV
