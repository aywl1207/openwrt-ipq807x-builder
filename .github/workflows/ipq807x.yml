name: Build IPQ807x NSS WiFi for devices

on: workflow_dispatch

jobs:
  detect_arch:
    runs-on: ubuntu-latest
    outputs:
      arch: ${{ steps.detect.outputs.arch }}
      tag_name: ${{ steps.detect.outputs.tag_name }}
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.5.0

      - name: Detect Target Architecture and Tag Name
        id: detect
        run: |
          TAG_NAME=$(curl -sL https://api.github.com/repos/aywl1207/openwrt-cloudflared/releases/latest | jq -r '.tag_name')
          echo "Detected tag name: $TAG_NAME"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "::set-output name=tag_name::$TAG_NAME"
          ARCH=$(grep '^CONFIG_TARGET_ARCH_PACKAGES=' .full_custom_config | cut -d '"' -f 2)
          echo "Detected architecture: $ARCH"
          echo "ARCH=$ARCH" >> $GITHUB_ENV
          echo "::set-output name=arch::$ARCH"

  build:
    needs: detect_arch
    name: Prepare and build IPQ807x NSS images for devices
    runs-on: self-hosted
    env:
      ARCH: ${{ needs.detect_arch.outputs.arch }}
      TAG_NAME: ${{ needs.detect_arch.outputs.tag_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Clone AgustinLorenzo openwrt for IPQ807x
        run: git clone --branch custom_main_nss https://github.com/aywl1207/openwrt-ipq807x.git openwrt-ipq807x

      - name: Move openwrt files to root
        run: mv openwrt-ipq807x/* .

      - name: Clean up temporary folder
        run: rm -rf openwrt-ipq807x

      - name: Update and install feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Remove Default Cloudflared Package Before Build
        run: rm -rf feeds/packages/net/cloudflared

      - name: Import full config for IPQ807x NSS
        run: cp .full_custom_config .config

      - name: QoL fixes on default config
        run: |
          mkdir -p files/etc/uci-defaults
          cat > files/etc/uci-defaults/99-qol_fixes << 'EOF'
          uci set wireless.radio0.country='US'
          uci set wireless.radio1.country='US'
          uci set wireless.radio2.country='US'
          uci set wireless.radio1.disabled=0
          uci set wireless.radio2.disabled=0
          uci set pbuf.opt.memory_profile=auto
          uci set network.globals.packet_steering=0
          uci set firewall.@defaults[0].flow_offloading=0
          uci set ecm.@general[0].enable_bridge_filtering=0
          uci set system.@system[0].cronloglevel='7'
          /etc/init.d/mwan3 stop
          /etc/init.d/mwan3 disable
          /etc/init.d/sqm stop
          /etc/init.d/sqm disable
          uci commit
          EOF

      - name: Ensure permissions for custom script
        run: chmod +x files/etc/uci-defaults/99-qol_fixes

      - name: Fetch Custom Cloudflared APK
        run: |
          curl -L -o package/network/utils/cloudflared/cloudflared-${TAG_NAME}-${ARCH}.apk \
          https://github.com/aywl1207/openwrt-cloudflared/releases/latest/download/${TAG_NAME}/cloudflared-${TAG_NAME}-${ARCH}.apk

      - name: Download package sources
        run: make download V=s

      - name: Build tools
        run: |
          make tools/install -j$(nproc) V=s || make tools/install V=s

      - name: Build toolchain
        run: |
          make toolchain/install -j$(nproc) V=s || make toolchain/install V=s

      - name: Build target images
        run: |
          make -j$(nproc) V=s || make V=s

      - name: Get the current date
        run: echo "NOW=$(date +%F-%H%M)" >> $GITHUB_ENV

      - name: Create a release
        uses: ncipollo/release-action@v1
        with:
          name: "${{ env.NOW }} | Updated custom prebuilt images for devices (NSS-WiFi)"
          commit: "main"
          tag: "ipq807x-nsswifi-${{ env.NOW }}"
          generateReleaseNotes: true
          makeLatest: true
          artifacts: bin/targets/qualcommax/ipq807x/*
          token: "${{ secrets.GITHUB_TOKEN }}"
